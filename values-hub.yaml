clusterGroup:
  name: hub
  isHubCluster: true
  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - letsencrypt
  - redhat-ods-operator
  - openshift-pipelines
  - openshift-nfd
  - nvidia-gpu-operator
  - openshift-serverless
  - knative-serving
  - plumbing
  - science-project

  subscriptions:
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.12
      #csv: advanced-cluster-management.v2.6.1
    rhoai:
      name: rhods-operator
      # Fast is required for 2.9.0
      channel: fast
      version: "2.13.1" # ensure we get the latest
      namespace: openshift-operators

    openshift-pipelines:
      name: openshift-pipelines-operator-rh
      namespace: openshift-operators

    serverless:
      channel: stable
      name: serverless-operator

    servicemesh:
      channel: stable
      namespace: openshift-operators
      name: servicemeshoperator

    nfd:
      name: nfd
      namespace: openshift-nfd
      channel: stable
    gpu:
      name: gpu-operator-certified
      namespace: nvidia-gpu-operator
      channel: stable
      source: certified-operators

    authorino:
      name: authorino-operator
      namespace: openshift-operators
      channel: tech-preview-v1

  projects:
  - hub
  - default
  - plumbing
  - auth
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  sharedValueFiles:
  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  # sharedValueFiles is a flexible mechanism that will add the listed valuefiles to every app defined in the
  # applications section. We intend this to supplement and possibly even replace previous "magic" mechanisms, though
  # we do not at present have a target date for removal.
  #
  # To replicate the "classic" magic include structure, the clusterGroup would need all of these
  # sharedValueFiles, in this order:
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.global.clusterVersion }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterPlatform }}-{{ $.Values.clusterGroup.name }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.clusterVersion }}-{{ $.Values.clusterGroup.name }}.yaml"
  #   - '/overrides/values-{{ $.Values.global.localClusterName }}.yaml'

  # This kind of variable substitution will work with any of the variables the Validated Patterns operator knows
  # about and sets, so this is also possible, for example:
  #   - '/overrides/values-{{ $.Values.global.hubClusterDomain }}.yaml'
  #   - '/overrides/values-{{ $.Values.global.localClusterDomain }}.yaml'
  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
        - /spec/loggingCA
    vault:
      name: vault
      namespace: vault
      project: hub
      chart: hashicorp-vault
      chartVersion: 0.1.*

    golang-external-secrets:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: hub
      chart: golang-external-secrets
      chartVersion: 0.1.*

    letsencrypt:
      name: letsencrypt
      namespace: letsencrypt
      project: default
      chart: letsencrypt
      chartVersion: 0.1.*

    data-science-cluster:
      name: data-science-cluster
      namespace: redhat-ods-operator
      project: hub
      path: charts/all/openshift-ai

    plumbing:
      name: plumbing
      namespace: plumbing
      project: plumbing
      path: charts/all/plumbing

    kueue:
      name: kueue
      namespace: science-project
      project: default
      path: charts/all/kueue

    htpassword:
      name: htpassword
      namespace: openshift-config
      project: auth
      path: charts/all/htpassword

    science-project:
      name: science-project
      namespace: science-project
      project: hub
      path: charts/all/science-project

  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: rhvp.cluster_utils.hello_world
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"
  managedClusterGroups:
    exampleRegion:
      name: group-one
      acmlabels:
      - name: clusterGroup
        value: group-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
